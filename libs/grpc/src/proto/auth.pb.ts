// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.3
// source: auth.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "auth";

export interface Empty {
}

export interface LogoutDTO {
  userId: string;
}

export interface RefreshTokenDTO {
  userId: string;
  refreshToken: string;
}

export interface LoginDTO {
  email: string;
  password: string;
}

export interface RegisterDTO {
  email: string;
  password: string;
  displayName: string;
}

export interface Tokens {
  accessToken: string;
  refreshToken: string;
}

export const AUTH_PACKAGE_NAME = "auth";

export interface AuthServiceClient {
  login(request: LoginDTO): Observable<Tokens>;

  register(request: RegisterDTO): Observable<Tokens>;

  refreshTokens(request: RefreshTokenDTO): Observable<Tokens>;

  logout(request: LogoutDTO): Observable<Empty>;
}

export interface AuthServiceController {
  login(request: LoginDTO): Promise<Tokens> | Observable<Tokens> | Tokens;

  register(request: RegisterDTO): Promise<Tokens> | Observable<Tokens> | Tokens;

  refreshTokens(request: RefreshTokenDTO): Promise<Tokens> | Observable<Tokens> | Tokens;

  logout(request: LogoutDTO): Promise<Empty> | Observable<Empty> | Empty;
}

export function AuthServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["login", "register", "refreshTokens", "logout"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTH_SERVICE_NAME = "AuthService";
